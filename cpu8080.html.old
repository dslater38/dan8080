<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <title>JavaScripot cpu8080</title>
	<script type="text/javascript" src="cpu8080.js" ></script>
	<script type="text/javascript" src="invaders.rom.js"></script>
	<script type="text/javascript" src="screen.js"></script>
  <script type="text/javascript">//<![CDATA[
                function cell( id ) {
                        return document.getElementById( id );
                }
		var tmp = new Uint8Array(1);
		function formatR8( v ) {
			tmp[0] = v;
			var s = tmp[0].toString(16);
			if( s.length == 1 )
				return "0x0" + s;
			else
				return "0x" + s;
		}
		var tmp2 = new Uint16Array(1);
 		function formatR16( v ) {
			tmp2[0] = v;
			var s = tmp2[0].toString(16);
			switch( s.length )
			{
				case 1:
					return "0x000" + s;
				case 2:
					return "0x00"+s;
				case 3:
					return "0x0" + s;
				default:
					return "0x"+s;
			}
		}
		function formatFlag(v) {
			return v ? "1" : "0";
		}
	       function addProp(obj, name, formatter) {
			Object.defineProperty( obj, name, {
				get: function() { return undefined; },
				set : function(v) { cell(name).value = formatter(v); }
			});
		}
		function getTable() {
			var t = {};
			var cells8 = ["A", "B", "C", "D", "E", "H", "L" ];
			var cells16 = ["BC", "DE", "HL", "SP", "PC"];
			var flags = ["ZF", "SF", "PF", "CF", "HF" ];
			for( var i=0; i<cells8.length;  ++i )
			{
				addProp(t, cells8[i], formatR8);
			}
			for( var i=0; i<cells16.length;  ++i )
			{
				addProp(t, cells16[i], formatR16);
			}		
			for( var i=0; i<flags.length;  ++i )
			{
				addProp(t, flags[i], formatFlag);
			}
			
			Object.defineProperty( t, "MEM", {
				get : function() { return undefined; },
				set : function(str) { cell("MEM").value = str; }
			});
			
			return t;
		}
		
		var tmp = new Uint8Array(1);
		
		function formatR82( v ) {
			tmp[0] = v;
			var s = tmp[0].toString(16);
			if( s.length == 1 )
				return "0" + s;
			else
				return s;
		}
		
		function dumpMem( cpu, addr, length, t ) {
			if( addr >= 0 )
			{
				if( length > 0 && length <= 65536 )
				{
					var str = "";
					var col = 0;
					for( var i=0; i<length; ++i )
					{
						var a = addr + i;
						if( col==0 )
						{
							str += formatR16(a) + ":\t";
						}
						var b = cpu.ram.getInt8( addr+i );
						var s = formatR82(b);
						str += s+" ";
						++col;
						if( col==32)
						{
							str += "\n";
							col=0;
						}
					}
					t.MEM = str;
				}
			}
		}
		
		
//]]></script>
	<script type="text/javascript">//<![CDATA[
		function write(str) {
			var  t = document.getElementById("t");
			t.textContent += "" + str + "\n";
		}
		
		var cpu = cpu8080.create( 65536 );
		
		function updateT(cpu,  t ) {
			t.A = cpu.A;
			t.B = cpu.B;
			t.C = cpu.C;
			t.D = cpu.D;
			t.E = cpu.E;
			t.H = cpu.H;
			t.L = cpu.L;
			
			t.SP = cpu.SP;
			t.PC = cpu.PC;
			t.BC = cpu.BC;
			t.DE = cpu.DE;
			t.HL = cpu.HL;
			
			t.ZF = cpu.ZF;
			t.SF = cpu.SF;
			t.PF = cpu.PF;
			t.CF = cpu.CF;
			t.HF = cpu.HF;
		}
		function onLoad() {
			var t = getTable();
			
			//~ updateT(cpu,t);
			
			//~ var prog = new Uint8Array( 256 );
			//~ for( var i=0; i<256; ++i )
				//~ prog[i] = i;
				
			//~ cpu.load( 0, prog );
			
			//~ dumpMem( cpu, 0, 256, t );
			
			//~ var MOVAimm = (0x07<<3 | 0x06);
			//~ var imm = 0x05;
			//~ var MOVBA = (0x40 | (0x00<<3)|0x07);
			//~ var ADDB = (0x80| 0);
			
			//~ cpu.reset();
			//~ var arr = [ 0x3E, 0x9F, 0x47, 0x31, 0x00, 0x10, 0x3D, 0xC2, 0x06, 0x00]
			//~ prog = new Uint8Array( arr.length );
			
			//~ for( i=0; i<arr.length; ++i )
				//~ prog[i] = (arr[i] & 0xFF);
			
			//~ prog[0] = MOVAimm;
			//~ prog[1] = imm;
			//~ prog[2] = MOVBA;
			//~ prog[3] = ADDB;
			
			
			test_code = [
	0x3e, 0x9f, 0x47, 0x31, 0x00, 0x10, 0x3d, 0xc2, 0x06, 0x00, 0x78, 0x80, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x91, 0xc9
];
			
			sample_code = [
				0x00, //     NOP
				0x00, //     NOP
				0x00, //     NOP
				0xc3, 0xd4, 0x18, // JP 18d4
				0x00, //     NOP
				0x00, //     NOP
				0xf5, //     PUSH AF
				0xc5, //     PUSH BC
				0xd5, //     PUSH DE
				0xe5, //     PUSH HL
				0xc3, 0x8c, 0x00,  // JP 8c
				0x00, //     NOP
				0xf5, //     PUSH AF
				0xc5, //     PUSH BC
				0xd5, //     PUSH DE
				0xe5, //     PUSH HL
				];
			
			
			var code = invadersRom ;
			
			cpu.load(0, code);
			
			dumpMem( cpu, 0, cpu.ram.byteLength, t );
			
			
			// dumpMem( cpu, 0, 256, t );
			//~ var count=0;
			//~ for( i=0; i<code.length; ++i )
			//~ {
			//~ ++count;
				//~ cpu.step();
				 //~ updateT(cpu,t);
			//~ }
			
			//~ dumpMem( cpu, 0, cpu.ram.byteLength, t );
			
			//~ cpu.load(0, prog);
			
			//~ cpu.step();
			//~ updateT(cpu,t);
			//~ cpu.step();
			//~ updateT(cpu,t);
			//~ cpu.step();
			//~ updateT(cpu,t);
			//~ cpu.step();
			//~ updateT(cpu,t);
			//~ cpu.step();
			//~ updateT(cpu,t);
			//~ cpu.step();
			//~ updateT(cpu,t);
			
			
			//~ for( var i in cpu ) {
				//~ if( typeof( cpu[i] ) == 'number' )
				//~ {
					//~ write( "" + i + " === 0x0" + cpu[i].toString(16) );
				//~ }
				//~ else
				//~ {
					//~ write( "" + i + " === " + cpu[i].toString() );
				//~ }
			//~ }
		}
		
		var go = false;
		function run() {
			if( go )
			{
				cpu.step()
				 updateT(cpu,getTable());
			}
			else
				dumpMem( cpu, 0, cpu.ram.byteLength, t );
		}
		
		var timer;
		
		function toggle() {
			go = go ? false : true;
			var b = document.getElementById("RUN");
			if( go )
			{
				b.value = "stop...";
				timer = setInterval(run, 1);
			}
			else
			{
				b.value = "run...";
				clearInterval(timer);
			}
		}
		
	//]]></script>

  </head>
  <body onload="onLoad();">
  <div>
<table border="0" cellpadding="0" cellspacing="0" style="border:false" >
<tr><td>
<table border="1" cellpadding="1" cellspacing="2" summary="Registers" >
	<caption>Registers</caption>
	<thead>
		<tr align="left" valign="top">
			<th colspan="2" id="th0B7644A00000">8-bit Registers</th>
			<th colspan="2" id="th0B7644A00002">16-bit Registers</th>
			<th id="th0B7644A00003">Flags</th>
		</tr>
	</thead>
	<tbody>
		<tr align="left" valign="top">
			<td headers="th0B7644A00000">A&emsp;<input id="A" readonly="true" style="width:3em;border-style:none" value="0x00" /></td>
			<td headers="th0B7644A00000">F&emsp;<input id="F" readonly="true" style="width:3em;border-style:none" value="0x00" /></td>
			<td colspan="2" headers="th0B7644A00002">SP&emsp;<input id="SP" readonly="true" style="width:4em;border-style:none" value="0x0000" /></td>
			<td headers="th0B7644A00003">ZF&emsp;<input id="ZF" readonly="true" style="width:4em;border-style:none" value="false" /></td>
		</tr>
		<tr align="left" valign="top">
			<td headers="th0B7644A00000">B&emsp;<input id="B" readonly="true" style="width:3em;border-style:none" value="0x00" /></td>
			<td headers="th0B7644A00000">C&emsp;<input id="C" readonly="true" style="width:3em;border-style:none" value="0x00" /></td>
			<td colspan="2" headers="th0B7644A00002">BC&emsp;<input id="BC" readonly="true" style="width:4em;border-style:none" value="0x0000" /></td>
			<td headers="th0B7644A00003">SF&emsp;<input id="SF" readonly="true" style="width:4em;border-style:none" value="false" /></td>
		</tr>
		<tr align="left" valign="top">
			<td headers="th0B7644A00000">D&emsp;<input id="D" readonly="true" style="width:3em;border-style:none" value="0x00" /></td>
			<td headers="th0B7644A00000">E&emsp;<input id="E" readonly="true" style="width:3em;border-style:none" value="0x00" /></td>
			<td colspan="2" headers="th0B7644A00002">DE&emsp;<input id="DE" readonly="true" style="width:4em;border-style:none" value="0x0000" /></td>
			<td headers="th0B7644A00003">PF&emsp;<input id="PF" readonly="true" style="width:4em;border-style:none" value="false" /></td>
		</tr>
		<tr align="left" valign="top">
			<td headers="th0B7644A00000">H&emsp;<input id="H" readonly="true" style="width:3em;border-style:none" value="0x00" /></td>
			<td headers="th0B7644A00000">L&emsp;<input id="L" readonly="true" style="width:3em;border-style:none" value="0x00" /></td>
			<td colspan="2" headers="th0B7644A00002">HL&emsp;<input id="HL" readonly="true" style="width:4em;border-style:none" value="0x0000" /></td>
			<td headers="th0B7644A00003">CF&emsp;<input id="CF" readonly="true" style="width:4em;border-style:none" value="false" /></td>
		</tr>
		<tr align="left" valign="top">
			<!-- <td colspan="2" headers="th0B7644A00000" style="background-color:lightgrey"></td> -->
			<td colspan="2" headers="th0B7644A00000" ><input id="RUN" type="button" value="run..." onclick="toggle();"/></td>
			<td colspan="2" headers="th0B7644A00002">PC&emsp;<input id="PC" readonly="true" style="width:4em;border-style:none" value="0x0000" /></td>
			<td headers="th0B7644A00003">HF&emsp;<input id="HF" readonly="true" style="width:4em;border-style:none" value="false" /></td>
		</tr>
		<tr align="left" valign="top">
			<td colspan="4"><canvas id="SCREEN" width="256" height="224" /></td>
		</tr>
	</tbody>
</table></td>
<td>
<table border="1" cellpadding="1" cellspacing="2" summary="Memory" >
<caption>Memory</caption>
	<thead>
		<tr align="left" valign="top">
			<th colspan="2" id="th0">Address</th>
			<th colspan="2" id="th1">Contents</th>
		</tr>
	</thead>
	<tbody>
	<tr align="left" valign="top" >
		<td colspan="2" headers="th0" ><input id="ADDR" value="0x0000" /></td>
		<td rowspan="5" colspan="2" headers="th1"><textarea rows="7" cols="80" id="MEM", readonly="true" 
		style="white-space: pre;word-wrap: normal;overflow-x: scroll;"></textarea></td>
	</tr>
	<tr align="left" valign="top"><td colspan="4" ><input type="button" value="Dump Address"/></td></tr>
	<tr align="left" valign="top"><td colspan="4" style="border-style:none">&emsp;</td></tr>
	<tr align="left" valign="top"><td colspan="4" style="border-style:none">&emsp;</td></tr>
	<tr align="left" valign="top"><td colspan="4" style="border-style:none">&emsp;</td></tr>
	</tbody>
</table>
</td></tr>
</table>
</div>
<div style="border:false"><textarea id="t" readonly="true" style="width:99%;border:false"></textarea></div>
  </body>
</html>